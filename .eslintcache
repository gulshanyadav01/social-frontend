[{"/home/gulshan/Desktop/Project/socialfrontend/src/index.js":"1","/home/gulshan/Desktop/Project/socialfrontend/src/App.js":"2","/home/gulshan/Desktop/Project/socialfrontend/src/components/Layout/Navbar.js":"3","/home/gulshan/Desktop/Project/socialfrontend/src/components/Layout/Landing.js":"4","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/store.js":"5","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/index.js":"6","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/alert.js":"7","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Actions/Types.js":"8","/home/gulshan/Desktop/Project/socialfrontend/src/components/auth/Register.js":"9","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Actions/alert.js":"10","/home/gulshan/Desktop/Project/socialfrontend/src/components/Layout/alert.js":"11","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Actions/auth.js":"12","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/auth.js":"13","/home/gulshan/Desktop/Project/socialfrontend/src/utils/setAuthToken.js":"14","/home/gulshan/Desktop/Project/socialfrontend/src/components/auth/Login.js":"15","/home/gulshan/Desktop/Project/socialfrontend/src/components/dashboard/Dashboard.js":"16","/home/gulshan/Desktop/Project/socialfrontend/src/components/Routing/PrivateRoute.js":"17","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/profile.js":"18","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Actions/profile.js":"19","/home/gulshan/Desktop/Project/socialfrontend/src/components/profile-form/CreateProfile.js":"20","/home/gulshan/Desktop/Project/socialfrontend/src/components/dashboard/DashboardAction.js":"21","/home/gulshan/Desktop/Project/socialfrontend/src/components/profile-form/EditProfile.js":"22","/home/gulshan/Desktop/Project/socialfrontend/src/components/profile-form/AddExperience.js":"23","/home/gulshan/Desktop/Project/socialfrontend/src/components/profile-form/AddEducation.js":"24","/home/gulshan/Desktop/Project/socialfrontend/src/components/dashboard/Experience.js":"25","/home/gulshan/Desktop/Project/socialfrontend/src/components/dashboard/Education.js":"26","/home/gulshan/Desktop/Project/socialfrontend/src/components/Layout/Upbar.js":"27","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profiles/Profiles.js":"28","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profiles/ProfileItem.js":"29","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/Profile.js":"30","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileTop.js":"31","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileAbout.js":"32","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileSkills.js":"33","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileExperience.js":"34","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileEducation.js":"35","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/post.js":"36"},{"size":257,"mtime":1610197196883,"results":"37","hashOfConfig":"38"},{"size":2553,"mtime":1610434668574,"results":"39","hashOfConfig":"38"},{"size":3719,"mtime":1610434650150,"results":"40","hashOfConfig":"38"},{"size":482,"mtime":1610202376167,"results":"41","hashOfConfig":"38"},{"size":410,"mtime":1610006103373,"results":"42","hashOfConfig":"38"},{"size":255,"mtime":1610433217608,"results":"43","hashOfConfig":"38"},{"size":408,"mtime":1610433469442,"results":"44","hashOfConfig":"38"},{"size":708,"mtime":1610348983549,"results":"45","hashOfConfig":"38"},{"size":3980,"mtime":1610373757760,"results":"46","hashOfConfig":"38"},{"size":331,"mtime":1610436415221,"results":"47","hashOfConfig":"38"},{"size":826,"mtime":1610436572336,"results":"48","hashOfConfig":"38"},{"size":3037,"mtime":1610436617675,"results":"49","hashOfConfig":"38"},{"size":1319,"mtime":1610185307012,"results":"50","hashOfConfig":"38"},{"size":253,"mtime":1610088662384,"results":"51","hashOfConfig":"38"},{"size":3452,"mtime":1610260189821,"results":"52","hashOfConfig":"38"},{"size":1916,"mtime":1610429307766,"results":"53","hashOfConfig":"38"},{"size":632,"mtime":1610100979587,"results":"54","hashOfConfig":"38"},{"size":1226,"mtime":1610349143151,"results":"55","hashOfConfig":"38"},{"size":6637,"mtime":1610374343891,"results":"56","hashOfConfig":"38"},{"size":9393,"mtime":1610374770497,"results":"57","hashOfConfig":"38"},{"size":1209,"mtime":1610263439264,"results":"58","hashOfConfig":"38"},{"size":10292,"mtime":1610374409044,"results":"59","hashOfConfig":"38"},{"size":6003,"mtime":1610279527781,"results":"60","hashOfConfig":"38"},{"size":6016,"mtime":1610279561961,"results":"61","hashOfConfig":"38"},{"size":2396,"mtime":1610433029313,"results":"62","hashOfConfig":"38"},{"size":2369,"mtime":1610429762032,"results":"63","hashOfConfig":"38"},{"size":610,"mtime":1610293385209,"results":"64","hashOfConfig":"38"},{"size":1043,"mtime":1610375436742,"results":"65","hashOfConfig":"38"},{"size":1298,"mtime":1610428509945,"results":"66","hashOfConfig":"38"},{"size":1551,"mtime":1610386233239,"results":"67","hashOfConfig":"38"},{"size":3205,"mtime":1610429053968,"results":"68","hashOfConfig":"38"},{"size":497,"mtime":1610387017975,"results":"69","hashOfConfig":"38"},{"size":918,"mtime":1610386397687,"results":"70","hashOfConfig":"38"},{"size":1132,"mtime":1610428016046,"results":"71","hashOfConfig":"38"},{"size":1287,"mtime":1610427976610,"results":"72","hashOfConfig":"38"},{"size":116,"mtime":1610433296559,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"gkjk15",{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gulshan/Desktop/Project/socialfrontend/src/index.js",[],["154","155"],"/home/gulshan/Desktop/Project/socialfrontend/src/App.js",["156","157","158"],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Layout/Navbar.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Layout/Landing.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/store/store.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/index.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/alert.js",["159"],"/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Actions/Types.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/auth/Register.js",["160","161"],"import React, {useState} from 'react';\nimport { connect } from \"react-redux\"; \nimport {setAlert}  from \"../store/Actions/alert\"; \nimport PropTypes from \"prop-types\"\nimport {register} from \"../store/Actions/auth\"; \nimport { Redirect, withRouter } from \"react-router-dom\"\nimport { RiLockPasswordLine } from 'react-icons/ri';\n\n const Register = ({setAlert, register, isAuthenticated, history }) => {\n\n     const [formData, setFormData] = useState({\n         name:\"\",\n         email:\"\",\n         password:\"\",\n         password2:\"\", \n     })\n     const onChange = (e) =>{\n        setFormData({...formData, [e.target.name]:e.target.value})       \n     }\n     const {name, email, password, password2} = formData; \n     \n     const onSubmit = (e) => {\n         e.preventDefault(); \n         if(password !== password2){\n             console.log(\"not match\");\n            setAlert(\"password do not match\", 'danger');  \n         }\n         else{\n            //  console.log(formData);\n             register({name, email, password, history}); \n         }\n        //  if(isAuthenticated){\n        //      console.log(\"hi\")\n        //     return <Redirect to = \"/dashboard\" />\n        // }\n         \n     }\n     \n     \n\n    return (\n        <div className = \"mx-auto my-auto w-72 h-72 mt-32\">\n            <form onSubmit = {onSubmit} >\n             <div className = \"w-72 h-auto bg-white shadow-lg rounded\">\n                <div className = \"mt-8 mb-4 ml-20 \">\n                    <h1 className = \"font-bold text-mango-600 underline\">Register Yourself</h1>\n                </div>\n                <div>\n                    <input \n                        className = \"focus:ring-red-400 focus:ring-2 px-2 py-2 m-2 w-11/12\"\n                        type = \"text\"\n                        placeholder = 'enter your name'\n                        name = \"name\" \n                        value = {name}\n                        onChange = {(e) => onChange(e)}\n                    /> \n                </div>\n                <div>\n                    <input \n                        className = \"focus:ring-red-400 focus:ring-2 px-2 py-2 m-2 w-11/12\"\n                        type = \"email\"\n                        placeholder = 'enter your email'\n                        name = \"email\" \n                        value = {email}\n                        onChange = {(e) => onChange(e)}\n                    /> \n                </div> \n                <div>\n                  \n                   <input \n                        className = \"focus:ring-red-400 focus:ring-2 px-2 py-2 m-2 w-11/12\"\n                        type = \"password\"\n                        placeholder = 'enter your password'\n                        name = \"password\" \n                        value = {password}\n                        onChange = {(e) => onChange(e)}\n                        \n                    /> \n                   \n                </div> \n                <div>\n                    <input \n                        className = \"focus:ring-red-400 focus:ring-2 px-2 py-2 m-2 w-11/12\"\n                        type = \"password\"\n                        placeholder = 'enter your password again'\n                        name = \"password2\" \n                        value = {password2}\n                        onChange = {(e) => onChange(e)}\n                    /> \n                </div> \n                <div>\n                    <input \n                        className = \" px-2 font-bold  py-2 m-2 w-11/12\"\n                        type = \"submit\"\n                        value = \"submit\" \n                        \n                    /> \n                </div>\n                </div> \n            </form>\n        </div>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    \n}\nconst mapStateToProps = (state) => ({\n    isAuthenticated:state.authReducer.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {setAlert, register})(withRouter(Register)); ","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Actions/alert.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Layout/alert.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Actions/auth.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/auth.js",["162"],"import {\n    REGISTER_SUCCESS, \n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS, \n    LOGOUT,\n    ACCOUNT_DELETED\n}  from \"../Actions/Types\"; \n\nconst initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null, \n    loading: true,\n    user: null\n\n}\n\nexport default  function (state = initialState, action) {\n    \n    switch(action.type){\n        case USER_LOADED:\n            return{\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: action.payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token);\n                return{\n                    ...state,\n                    ...action.payload,\n                    isAuthenticated: true,\n                    loading:false\n                }\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case AUTH_ERROR:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem(\"token\");\n                return{\n                    ...state,\n                    token: null,\n                    isAuthenticated: false,\n                    loading:false\n                }\n        default:\n            return state;\n    }\n}\n\n\n\n","/home/gulshan/Desktop/Project/socialfrontend/src/utils/setAuthToken.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/auth/Login.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/dashboard/Dashboard.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Routing/PrivateRoute.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/profile.js",["163"],"import { \n    PROFILE_ERROR,\n    GET_PROFILE,\n    CLEAR_PROFILE,\n    UPDATE_PROFILE,\n    GET_PROFILES,\n    GET_REPOS\n     } from \"../Actions/Types\";\n\nconst initialState = {\n    profile: null, \n    profiles:[],\n    repos:[],\n    loading: true,\n    error:{}\n}\n\nexport default function(state = initialState, action){\n    const {type, payload} = action; \n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return{\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        case GET_PROFILES:\n            return{\n                ...state,\n                profiles:payload,\n                loading: false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error:payload,\n                loading:false\n            }\n        case CLEAR_PROFILE:\n            return{\n                ...state,\n                profile: null,\n                repos:[],\n                loading: false\n            }\n        case GET_REPOS:\n            return{\n                ...state,\n                repos:payload,\n                loading: false\n            }\n        default:\n            return state;\n    }\n\n}","/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Actions/profile.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/profile-form/CreateProfile.js",["164"],"import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { createProfile} from \"../store/Actions/profile\"; \nimport {connect} from \"react-redux\"; \nimport {withRouter} from \"react-router-dom\"; \nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { FiInstagram } from \"react-icons/fi\"\nimport { FaFacebookMessenger, FaYoutube } from \"react-icons/fa\"\nimport { FaLinkedin } from \"react-icons/fa\"; \nimport { FaTwitter } from \"react-icons/fa\"\nimport { FaBuilding } from \"react-icons/fa\"\nimport { BsFolderSymlink  } from \"react-icons/bs\"; \nimport { FaLocationArrow} from \"react-icons/fa\"; \nimport { AiOutlineCheckCircle } from \"react-icons/ai\"\nimport { GiSkills } from \"react-icons/gi\"; \nimport { AiFillGithub } from \"react-icons/ai\"\nimport { BsPeopleCircle } from \"react-icons/bs\"; \nimport { ImBackward } from \"react-icons/im\"\nimport { Link } from \"react-router-dom\"\n\nconst CreateProfile = ({createProfile, history }) => {\n    const [socialLink, setSocialLink] = useState(false);\n    const [formData, setFormData]  = useState({\n        company:\"\",\n        website:\"\",\n        location:\"\",\n        status:\"\",\n        skills:\"\",\n        githubusername:\"\",\n        bio:\"\",\n        twitter:\"\",\n        facebook:\"\",\n        linkedin:\"\",\n        youtube:\"\",\n        instagram:\"\"\n    }); \n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData; \n\n    const onChange = (e) => { \n        e.preventDefault(); \n        setFormData({...formData, [e.target.name]: e.target.value}); \n\n    }\n    const onSubmit = (e) => {\n        e.preventDefault(); \n        createProfile(formData, history); \n    }\n\n    return (\n        <>\n        \n        <div className = \"mx-auto my-auto w-3/5 h-auto mt-20\">\n        <h2 className = \"uppercase w-48 h-8 rounded-t  shadow px-2 py-1  font-bold bg-white text-limegreen-900  \">Create profile</h2>\n        <form onSubmit = {onSubmit}>\n            <div className = \" h-auto bg-white shadow-lg rounded\">\n            <div className = \"flex\">\n                <label for=\"company\"><FaBuilding className = \"mt-5 w-8 h-6 text-scarlet-400\"/></label>\n                <input\n                    className = \"border-b-2 border-limegreen-500 px-2 py-2 m-1 w-11/12\" \n                    type = \"text\"\n                    placeholder = 'enter your company'\n                    name = \"company\" \n                    value = {company}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div> \n            <div className = \"flex\">\n                <label for=\"company\"><BsFolderSymlink className = \" mt-5 w-8 h-6 text-sunglow-500\"/></label>\n                <input \n                    className = \" border-b-2 border-limegreen-500 px-2 py-2  w-11/12\"\n                    type = \"text\"\n                    placeholder = 'enter your website'\n                    name = \"website\" \n                    value = {website}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div> \n            <div className = \"flex\">\n                <label for=\"company\"><FaLocationArrow className = \"mt-5 w-8 h-6 text-indigo-700\"/></label>\n\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter location'\n                    name = \"location\" \n                    value = {location}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div> \n            <div className = \"flex\">\n                 <label for=\"company\"><AiOutlineCheckCircle className = \"mt-5 w-8 h-6 text-limegreen-700\"/></label>\n                <input \n                    type = \"text\"\n                    \n                    className = \"border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter your status'\n                    name = \"status\" \n                    value = {status}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n                <label for=\"company\"><GiSkills className = \"mt-5 w-8 h-6 text-mango-700\"/></label>\n\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter skills '\n                    name = \"skills\" \n                    value = {skills}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div> \n            <div className = \"flex\">\n                <label for=\"company\"><AiFillGithub className = \"mt-5 w-8 h-6\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter githubusername'\n                    name = \"githubusername\" \n                    value = {githubusername}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n                <label for = \"bio\"><BsPeopleCircle className = \"mt-5 w-8 h-6 text-cerise-600\" /></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter bio'\n                    name = \"bio\" \n                    value = {bio}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n                <button className = \"bg-orange-600 hover:bg-orange-700 font-bold text-white rounded px-3 py-2 m-2\" onClick = {()=> setSocialLink(!socialLink)}> social media </button>\n                <h1 className = \"m-4 text-scarlet-600\">(Optional)</h1>\n            </div>\n            {socialLink && <div>\n                <div className = \"flex\">\n                    <label for=\"twitter\"><FaTwitter className = \"mt-5 w-8 h-6 text-blue-700\"/></label>\n                \n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2 border-lim border-limegreen-500egreen-400 w-11/12\"\n                    placeholder = 'enter twitter'\n                    name = \"twitter\" \n                    value = {twitter}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n            \n                <label for=\"facebook\"><FaFacebookMessenger className = \"mt-5 w-8 h-6 text-blue-500\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter facebook '\n                    name = \"facebook\" \n                    value = {facebook}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n                <label for=\"instragram\"><FiInstagram className = \"mt-5 w-8 h-6 text-red-500\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter instagram'\n                    name = \"instagram\" \n                    value = {instagram}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n            \n                <label for=\"instragram\"><FaLinkedin className = \"mt-5 w-8 h-6 text-blue-600\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'linkedin'\n                    name = \"linkedin\" \n                    value = {linkedin}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n            \n                <label for=\"youtube\"><FaYoutube className = \"mt-5 w-8 h-6 text-red-600\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter youtube'\n                    name = \"youtube\" \n                    value = {youtube}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n             </div>}\n            \n            <div>\n                <input \n                className = \"bg-blue-100 hover:bg-blue-300 cursor-pointer font-bold rounded px-8 py-2 m-2\"\n                type = \"submit\" value = \"submit\"/>\n                <button className = \"bg-blue-100 hover:bg-blue-300 font-bold rounded px-8 py-2 m-2\"><Link to = \"/dashboard\"> <ImBackward className = \"inline text-scarlet-800\" /> Dashboard</Link></button>\n                    \n            </div>\n            </div>  \n        </form>\n    </div>\n    </>\n    )\n}\n\nCreateProfile.propTypes = {\n    profile: PropTypes.func.isRequired\n\n}\n\n// const mapStateToProps = state => ({\n\n// })\n\nexport default connect(null, {createProfile})(withRouter(CreateProfile)); \n","/home/gulshan/Desktop/Project/socialfrontend/src/components/dashboard/DashboardAction.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/profile-form/EditProfile.js",["165"],"import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { createProfile, getCurrentProfile} from \"../store/Actions/profile\"; \nimport {connect} from \"react-redux\"; \nimport {withRouter, Link} from \"react-router-dom\"; \nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { FiInstagram } from \"react-icons/fi\"\nimport { FaFacebookMessenger, FaYoutube } from \"react-icons/fa\"\nimport { FaLinkedin } from \"react-icons/fa\"; \nimport { FaTwitter } from \"react-icons/fa\"\nimport { FaBuilding } from \"react-icons/fa\"\nimport { BsFolderSymlink  } from \"react-icons/bs\"; \nimport { FaLocationArrow} from \"react-icons/fa\"; \nimport { AiOutlineCheckCircle } from \"react-icons/ai\"\nimport { GiSkills } from \"react-icons/gi\"; \nimport { AiFillGithub } from \"react-icons/ai\"\nimport { BsPeopleCircle } from \"react-icons/bs\"; \nimport { ImBackward } from \"react-icons/im\"\n// import { FaYoutube } from \"react-icons/fa\"\n\nconst initialState = {\n    company:\"\",\n        website:\"\",\n        location:\"\",\n        status:\"\",\n        skills:\"\",\n        githubusername:\"\",\n        bio:\"\",\n        twitter:\"\",\n        facebook:\"\",\n        linkedin:\"\",\n        youtube:\"\",\n        instagram:\"\"\n\n}\n\nconst EditProfile = ({ profile: {profile, loading }, createProfile, getCurrentProfile,  history }) => {\n    const [formData, setFormData]  = useState(initialState); \n    const [socialLink, setSocialLink] = useState(false);\n    \n    useEffect(() => {\n        if (!profile) getCurrentProfile();\n        if (!loading && profile) {\n          const profileData = { ...initialState };\n          for (const key in profile) {\n            if (key in profileData) profileData[key] = profile[key];\n          }\n          for (const key in profile.social) {\n            if (key in profileData) profileData[key] = profile.social[key];\n          }\n          if (Array.isArray(profileData.skills))\n            profileData.skills = profileData.skills.join(', ');\n          setFormData(profileData);\n        }\n      }, [loading, getCurrentProfile, profile]); \n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData; \n\n    \n\n    \n\n    const onChange = (e) => { \n        e.preventDefault(); \n        setFormData({...formData, [e.target.name]: e.target.value}); \n\n    }\n    const onSubmit = (e) => {\n        e.preventDefault(); \n        createProfile(formData, history, true); \n    }\n\n    return(\n        <>\n        \n        <div className = \"mx-auto my-auto w-3/5 h-auto mt-20\">\n        <h2 className = \"uppercase w-32 h-8 rounded-t  shadow px-1 py-1  font-bold bg-white text-limegreen-900  \">Edit profile</h2>\n        <form onSubmit = {onSubmit}>\n            <div className = \" h-auto bg-white shadow-lg rounded\">\n            <div className = \"flex\">\n                <label for=\"company\"><FaBuilding className = \"mt-5 w-8 h-6 text-scarlet-400\"/></label>\n                <input\n                    className = \"border-b-2 border-limegreen-500 px-2 py-2 m-1 w-11/12\" \n                    type = \"text\"\n                    placeholder = 'enter your company'\n                    name = \"company\" \n                    value = {company}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div> \n            <div className = \"flex\">\n                <label for=\"company\"><BsFolderSymlink className = \" mt-5 w-8 h-6 text-sunglow-500\"/></label>\n                <input \n                    className = \" border-b-2 border-limegreen-500 px-2 py-2  w-11/12\"\n                    type = \"text\"\n                    placeholder = 'enter your website'\n                    name = \"website\" \n                    value = {website}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div> \n            <div className = \"flex\">\n                <label for=\"company\"><FaLocationArrow className = \"mt-5 w-8 h-6 text-indigo-700\"/></label>\n\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter location'\n                    name = \"location\" \n                    value = {location}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div> \n            <div className = \"flex\">\n                 <label for=\"company\"><AiOutlineCheckCircle className = \"mt-5 w-8 h-6 text-limegreen-700\"/></label>\n                <input \n                    type = \"text\"\n                    \n                    className = \"border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter your status'\n                    name = \"status\" \n                    value = {status}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n                <label for=\"company\"><GiSkills className = \"mt-5 w-8 h-6 text-mango-700\"/></label>\n\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter skills '\n                    name = \"skills\" \n                    value = {skills}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div> \n            <div className = \"flex\">\n                <label for=\"company\"><AiFillGithub className = \"mt-5 w-8 h-6\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter githubusername'\n                    name = \"githubusername\" \n                    value = {githubusername}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n                <label for = \"bio\"><BsPeopleCircle className = \"mt-5 w-8 h-6 text-cerise-600\" /></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter bio'\n                    name = \"bio\" \n                    value = {bio}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n                <button className = \"bg-orange-600 hover:bg-orange-700 font-bold text-white rounded px-3 py-2 m-2\" onClick = {()=> setSocialLink(!socialLink)}> social media </button>\n                <h1 className = \"m-4 text-scarlet-600\">(Optional)</h1>\n            </div>\n            {socialLink && <div>\n                <div className = \"flex\">\n                    <label for=\"twitter\"><FaTwitter className = \"mt-5 w-8 h-6 text-blue-700\"/></label>\n                \n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2 border-lim border-limegreen-500egreen-400 w-11/12\"\n                    placeholder = 'enter twitter'\n                    name = \"twitter\" \n                    value = {twitter}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n            \n                <label for=\"facebook\"><FaFacebookMessenger className = \"mt-5 w-8 h-6 text-blue-500\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter facebook '\n                    name = \"facebook\" \n                    value = {facebook}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n                <label for=\"instragram\"><FiInstagram className = \"mt-5 w-8 h-6 text-red-500\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter instagram'\n                    name = \"instagram\" \n                    value = {instagram}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n            \n                <label for=\"instragram\"><FaLinkedin className = \"mt-5 w-8 h-6 text-blue-600\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'linkedin'\n                    name = \"linkedin\" \n                    value = {linkedin}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n            <div className = \"flex\">\n            \n                <label for=\"youtube\"><FaYoutube className = \"mt-5 w-8 h-6 text-red-600\"/></label>\n                <input \n                    type = \"text\"\n                    className = \" border-b-2 border-limegreen-500  px-2 py-2  w-11/12\"\n                    placeholder = 'enter youtube'\n                    name = \"youtube\" \n                    value = {youtube}\n                    onChange = {(e) => onChange(e)}\n                /> \n            </div>\n             </div>}\n            \n            <div>\n                <input \n                className = \"bg-blue-100 hover:bg-blue-300 cursor-pointer font-bold rounded px-8 py-2 m-2\"\n                type = \"submit\" value = \"submit\"/>\n                <button className = \"bg-blue-100 hover:bg-blue-300 font-bold rounded px-8 py-2 m-2\"><Link to = \"/dashboard\"> <ImBackward className = \"inline text-scarlet-800\" /> Dashboard</Link></button>\n                    \n            </div>\n            </div>  \n        </form>\n    </div>\n    </>\n    )\n}\n\nEditProfile.propTypes = {\n    profile: PropTypes.object.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    createProfile:PropTypes.func.isRequired,\n\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n\n})\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile)); \n","/home/gulshan/Desktop/Project/socialfrontend/src/components/profile-form/AddExperience.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/profile-form/AddEducation.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/dashboard/Experience.js",["166"],"/home/gulshan/Desktop/Project/socialfrontend/src/components/dashboard/Education.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Layout/Upbar.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Profiles/Profiles.js",["167"],"import React, {useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getProfiles } from \"../store/Actions/profile\"\nimport ProfileItem from \"./ProfileItem\"; \n\nconst Profiles = ({ getProfiles, profile: {profiles, loading }}) => {\n    useEffect(() => {\n        getProfiles();\n    }, [])\n    return (\n        <div className = \"m-8 w-3/5 h-auto bg-white shadow rounded\">\n            { loading ? <div><h1>loading</h1></div> : <div className = \"flex flex-wrap w-full\">\n                {profiles.length> 0 ? (\n                    profiles.map(profile => (\n                        <ProfileItem key = {profile._id} profile = {profile}/>\n                    ))\n                ): <h1>No profiles found</h1>}\n            </div> }\n        </div>\n    )\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n\n}\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles); \n","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profiles/ProfileItem.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/Profile.js",["168"],"import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from \"react-redux\"\nimport { getProfileById } from \"../store/Actions/profile\"; \nimport ProfileTop from \"./ProfileTop\"; \nimport ProfileAbout from \"./ProfileAbout\"\nimport ProfileSkills from \"./ProfileSkills\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\"; \n\n\nconst Profile = ({  getProfileById ,match, profile:{profile, loading, auth, } }) => {\n    useEffect(() => {\n        getProfileById(match.params.userId);\n\n    },[getProfileById]); \n    return (\n        <div>\n            {profile ===  null || loading ? <div>loading</div>:(\n            <div className = \" ml-8 mt-20 w-3/5  \">\n                <ProfileTop profile = {profile}/>\n                <ProfileAbout profile = {profile} />\n                <ProfileSkills profile = {profile} />\n                <div className = \"w-full h-auto mt-4 flex rounded shadow bg-white \">\n                    <ProfileEducation profile = {profile}  /><hr className = \"w-0.5 h-auto  bg-gray-300\"></hr>\n                    <ProfileExperience profile = {profile} />\n                    \n                </div>\n            </div>)}\n        </div>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById:PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth:state.authReducer\n})\n\nexport default connect(mapStateToProps, {getProfileById })(Profile);\n","/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileTop.js",["169","170","171","172","173","174","175","176"],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileAbout.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileSkills.js",[],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileExperience.js",["177"],"/home/gulshan/Desktop/Project/socialfrontend/src/components/Profile/ProfileEducation.js",["178"],"/home/gulshan/Desktop/Project/socialfrontend/src/components/store/Reducers/post.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":15},{"ruleId":"183","severity":1,"message":"188","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":8,"column":1,"nodeType":"191","endLine":18,"endColumn":2},{"ruleId":"183","severity":1,"message":"192","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":18},{"ruleId":"183","severity":1,"message":"193","line":7,"column":10,"nodeType":"185","messageId":"186","endLine":7,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":20,"column":1,"nodeType":"191","endLine":54,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":18,"column":1,"nodeType":"191","endLine":57,"endColumn":2},{"ruleId":"183","severity":1,"message":"193","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":28},{"ruleId":"183","severity":1,"message":"193","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":28},{"ruleId":"183","severity":1,"message":"194","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":24},{"ruleId":"195","severity":1,"message":"196","line":10,"column":8,"nodeType":"197","endLine":10,"endColumn":10,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"199","line":16,"column":7,"nodeType":"197","endLine":16,"endColumn":23,"suggestions":"200"},{"ruleId":"183","severity":1,"message":"201","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":17},{"ruleId":"183","severity":1,"message":"202","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":15},{"ruleId":"203","severity":1,"message":"204","line":32,"column":29,"nodeType":"205","endLine":32,"endColumn":66},{"ruleId":"203","severity":1,"message":"204","line":37,"column":29,"nodeType":"205","endLine":37,"endColumn":75},{"ruleId":"203","severity":1,"message":"204","line":42,"column":29,"nodeType":"205","endLine":42,"endColumn":74},{"ruleId":"203","severity":1,"message":"204","line":47,"column":29,"nodeType":"205","endLine":47,"endColumn":73},{"ruleId":"203","severity":1,"message":"204","line":52,"column":29,"nodeType":"205","endLine":52,"endColumn":74},{"ruleId":"203","severity":1,"message":"204","line":57,"column":29,"nodeType":"205","endLine":57,"endColumn":73},{"ruleId":"183","severity":1,"message":"201","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":17},{"ruleId":"183","severity":1,"message":"206","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":20},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Landing' is defined but never used.","'Upbar' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Redirect' is defined but never used.","'RiLockPasswordLine' is defined but never used.","'FcOrganization' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["209"],"React Hook useEffect has a missing dependency: 'match.params.userId'. Either include it or remove the dependency array.",["210"],"'PropTypes' is defined but never used.","'profile' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'PrivateRoute' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [getProfiles]",{"range":"215","text":"216"},"Update the dependencies array to be: [getProfileById, match.params.userId]",{"range":"217","text":"218"},[333,335],"[getProfiles]",[566,582],"[getProfileById, match.params.userId]"]